{
  "name": "Integrated Platform Support",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "78ad663e-bed7-40f3-b289-47abf710df83",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -900,
        360
      ],
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6a5ef00e-b992-4dd4-ab58-e838a594e2d6",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        420,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "b82fb861-0047-4e30-a01b-ceda36b7040a",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2700,
        160
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "b2938d11-ad5c-4435-b432-64b91538555d",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2540,
        160
      ],
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions. It contains the knowledge source of resolutions for the platform team."
      },
      "id": "11a9b55d-daaf-4179-a783-f84574828804",
      "name": "Retrieve Documents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -140,
        100
      ]
    },
    {
      "parameters": {
        "content": "## Agent Tools for RAG",
        "height": 529,
        "width": 883,
        "color": 4
      },
      "id": "b68e402c-db9a-4f2c-bc32-45c3c8ae9a8f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -280,
        20
      ]
    },
    {
      "parameters": {
        "content": "## Tool to Add a Google Drive File to Vector DB",
        "height": 667.1104380931955,
        "width": 2352.5048970686776,
        "color": 5
      },
      "id": "0fae7963-c6e6-4868-b821-4c5fbb491d9d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        -120
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "f1377b5f-f020-42db-bee0-1eef8a58391d",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1460,
        120
      ],
      "executeOnce": true,
      "credentials": {
        "googleApi": {
          "id": "0Ix6sFVaE8ntEjF3",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "url",
          "value": "https://drive.google.com/drive/folders/1gFS8iBcRN1vs5a1v7vmal3AHmopPAdWT",
          "__regex": "https:\\/\\/drive\\.google\\.com(?:\\/.*|)\\/folders\\/([0-9a-zA-Z\\-_]+)(?:\\/.*|)"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "6571d89d-5332-41a2-a9b4-3aa756737557",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        700,
        240
      ],
      "credentials": {
        "googleApi": {
          "id": "0Ix6sFVaE8ntEjF3",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "49a82645-4b7c-4aa9-a8d1-465950f6651c",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2220,
        320
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "42670c4b-7ce6-4b44-ab79-65d8915be8d3",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -200,
        440
      ],
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "26a785b0-4be6-4715-be4b-725855948052",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        -760,
        360
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "95f28d1b-b0f3-46af-8b9a-19355f711b81",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1220,
        120
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6680d310-9202-46de-8840-8ddd151278cc",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        120
      ]
    },
    {
      "parameters": {
        "content": "## RAG AI Agent with Chat Interface",
        "height": 485,
        "width": 1036
      },
      "id": "0c6e6126-4a11-465f-8747-031368339fad",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1320,
        60
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e4c208ca-1d15-4a9a-818a-6bacd9e81b26",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "chatInput",
              "value": "={{ $json?.chatInput || $json.body.chatInput ||$json.body.query.command }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "={{ $json?.sessionId || $json.body.sessionId || $json.headers.session_id}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a36f5109-54ef-4fca-ba18-b2b02df02d07",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1020,
        140
      ]
    },
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {}
      },
      "id": "5eb9bcd5-9394-4b21-8d0a-c3f38b1b2b4c",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1280,
        140
      ],
      "webhookId": "15e4d662-3f98-48d0-9f50-68838769ecac"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "invoke",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {
          "rawBody": false
        }
      },
      "id": "5831cd40-f8d2-4e0c-bc43-ca4c1e01c188",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1280,
        340
      ],
      "webhookId": "9ba11544-5c4e-4f91-818a-08a4ecb596c5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "qMTHIkcSNf7ZuBDJ",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "7854f99b-17c3-4390-ae92-0b9f57f9c5c6",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2220,
        -60
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "a298819e-e945-49d2-ba65-ad3a33f4882f",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2140,
        120
      ]
    },
    {
      "parameters": {},
      "id": "c4019524-831d-4847-b3f2-e19e9fafed6f",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2700,
        380
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "2e0fdd69-f3c7-4c29-8dc7-95d8111bb19a",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2300,
        120
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "You are a personal assistant who helps Platform Support Team to provide and execute resolutions. For that you had access to various tools and knowledge sources to complete the job.\n\nSupabase Vector DB to have all the document knowledge source.\n\nAccess to Docker Management Agent whose job is to monitor, restart, and manage services running in Docker containers.\n\nAccess to postgres MCP server to fetch upstream and downstream dependencies. System can invoke both list resources and list tools in parallel for faster execution. Hit list tools of postgres MCP server before calling execute tool\n1) List Resources - will list down all available resources in the server\n2) Read Resources - reads the corresponding resource to get DB schema of the postgres instance.\n3) List Tools - lists all the avaialble tools and it's functionality in the server.\n4) Execute Tool - will execute the tool and returns the corresponding result.\n\nExecute the MCP server tools in the listed order to formulate the SQL query to be execute using query tool of MCP server\n\n"
        }
      },
      "id": "2df2e368-a8e6-430d-9db1-d261efe4cc4c",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -800,
        140
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9c0f0d6b-28f8-4bce-98ca-deb7492fe727"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "3fac81a4-2791-4d24-a6c3-3c74923588a1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1680,
        120
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "06f8865d-772e-48e9-a209-ea1291db6510",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2580,
        -60
      ],
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "3fc9558b-9dde-4dc3-8631-15eb1c2789f6",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -220,
        280
      ],
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "2ec25956-cff8-48c3-83e9-d0f5ff1e3707",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1980,
        120
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "authentication": "serviceAccount",
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "https://drive.google.com/drive/u/1/folders/1pdS5Js2PMK_jw4TSs5tdOlF9uPWZ5TAv",
          "mode": "url"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "696c8e90-6a8b-42bd-936c-b39dc2ec28a9",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        700,
        20
      ],
      "credentials": {
        "googleApi": {
          "id": "0Ix6sFVaE8ntEjF3",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Postgres MCP for CI",
        "height": 260,
        "width": 660,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1060,
        -220
      ],
      "typeVersion": 1,
      "id": "c1946b43-275f-402c-b653-9b3900e6d3c3",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "readResource",
        "resourceUri": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Resource_URI', ``, 'string') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1020,
        -120
      ],
      "id": "a57295a3-e30f-42e0-9939-6f8bfcd2c8e9",
      "name": "MCP Read Resource Client",
      "credentials": {
        "mcpClientApi": {
          "id": "8ngWaCpnsJjydjYq",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use MCP client to List the available resources of postgres upstream and downstream dependencies. Once the resources are listed use read the respource to provide the SQL schema of the pg database instance to formulate queries before executing the query tool.",
        "operation": "listResources"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -840,
        -120
      ],
      "id": "acda9124-2c1d-4d18-8121-542b47f8df41",
      "name": "MCP List Resource Client",
      "credentials": {
        "mcpClientApi": {
          "id": "8ngWaCpnsJjydjYq",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "={{ $fromAI('tool', 'selected tool to execute') }}",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -680,
        -120
      ],
      "id": "6411acb8-fbe2-420a-9dd6-3ecc9a38a543",
      "name": "MCP Execute Tool Client",
      "credentials": {
        "mcpClientApi": {
          "id": "8ngWaCpnsJjydjYq",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Run this agent to get list of tools available in the MCP server and use this to execute the execute tool of MCP client. This MCP server connects to postgres where the upstream and downstream dependencies present."
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -520,
        -120
      ],
      "id": "28528263-133c-4512-9925-43e7f5bf8f2d",
      "name": "MCP List Tool Client",
      "credentials": {
        "mcpClientApi": {
          "id": "8ngWaCpnsJjydjYq",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "This AI-powered Docker management assistant integrated with n8n. It's job is to monitor, restart, and manage services running in Docker containers. You have access to the following tools:\n\nList Running Containers – Lists all running containers. Pass 'true' to include stopped ones.\n\nHealth Check – Checks the health status of a specified Docker container.\n\nRestart Service – Restarts a specified Docker container.\n\n\nprovide the requirement as an query to the request body to get the results from agents.\n\nFor Ex:- \nList all Containers - AI will return all including stopped\nList Running Containers - AI will return active containers\nHealth Check for ${service_name} - Returns health check of the service. Here ${service_name} is the placeholder that can be any of the list of containers.\nRestart ${service_name} - Restarts the service.\n\nSend the appropriate command query parameter to get response",
        "url": "http://4.188.72.83:5679/invokeagent/{command}",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Content-Type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "valueProvider": "fieldValue",
              "value": "*/*"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "command",
              "description": "This was agentic endpoint that accepts any query and responds",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -440,
        380
      ],
      "id": "57773ff6-28f0-4d2b-875f-1f47261e9427",
      "name": "Docker Management Assistant"
    },
    {
      "parameters": {
        "content": "### Custom MCP Server",
        "height": 220,
        "width": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -500,
        320
      ],
      "typeVersion": 1,
      "id": "c12690f3-1931-46a2-b00c-7c5c3b2062e3",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        1880,
        -900
      ],
      "id": "a3083928-9852-40e2-8a76-07945a80f69c",
      "name": "Summarize1"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2080,
        -900
      ],
      "id": "7f202ed2-bca5-4761-92eb-c505073f83c5",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2000,
        -680
      ],
      "id": "1ec1a094-b4fe-4bbe-8e89-9f0b3bcc6e01",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "inc_number",
                "value": "={{ $json.concatenated_data.parseJson().last().inc_number}}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2120,
        -700
      ],
      "id": "bfabcfb5-7685-4dab-88b3-ce6ca1c3e50e",
      "name": "Default Data Loader2"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2240,
        -540
      ],
      "id": "f0920a59-dc7e-440c-a972-f965f07ca5cc",
      "name": "Character Text Splitter1"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1700,
        -900
      ],
      "id": "7406044a-0ef0-4408-bc93-1e0c93863e29",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "incidents",
        "filterType": "string",
        "filterString": "=metadata->>inc_number=like.*{{ $json.payload.inc_number }}*"
      },
      "id": "0c9312ef-444f-4014-bce6-db14d57c1167",
      "name": "Delete Old Doc Rows1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1340,
        -900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Postgres Incident Management Store",
        "height": 680,
        "width": 1640
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        -1080
      ],
      "typeVersion": 1,
      "id": "b64491cb-f7cf-4338-9487-8b5de68485c8",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "firesOn": "UPDATE",
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        880,
        -720
      ],
      "id": "adcac459-8980-442a-9910-e00d419be6c6",
      "name": "Update Trigger",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "inc_id",
              "value": "={{ $json.payload.inc_number }}",
              "type": "string"
            },
            {
              "id": "547a3e44-dadf-420e-bc2f-ffec7766b06b",
              "name": "payload",
              "value": "={{ $json.payload }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "a6773aee-f2d6-4799-99df-acb210556da2",
      "name": "Set Incident Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1160,
        -900
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "inc_number",
              "value": "={{ $('Set Incident Id').item.json.payload.inc_number }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1520,
        -900
      ],
      "id": "05c6a9f5-b707-45d8-a2a0-0b07a1f9860d",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operationMode": "documentLoader",
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "summarizationMethod": "refine",
              "refinePrompt": "Your job is to produce a final summary of the incident from postgres incidents table. Fetch the incident from the postgres select row tool. Use that information to provide simple summary of the incident. ",
              "refineQuestionPrompt": "=Write a concise summary of the following explaining {{ $if($('Summarize2').item.json.concatenated_payload.parseJson().status = 'Resolved', \"incident issue, root cause and resolution steps\", \"incident summary\") }}\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        -40,
        -720
      ],
      "id": "2ec59666-104f-43ac-abe5-f0b23362e1bc",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        100,
        -560
      ],
      "id": "d6111549-ff85-40e7-b8d2-790a155069d2",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        220,
        -440
      ],
      "id": "211d38d2-60db-497a-b693-57cbe34fa17b",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -20,
        -440
      ],
      "id": "3505ccf4-cb27-421d-9def-4ddae71acac4",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get the incident information from the incident number and pass it to summerizer chain",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "inc_number",
              "value": "={{$fromAI('inc_number', \"Select Incident Number to Summerize\")}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        -260,
        -500
      ],
      "id": "a0da8855-61d8-46b0-9c18-d2400fc5843a",
      "name": "Fetch Incidents",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Incident Summerizer",
        "height": 520,
        "width": 540
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -80,
        -820
      ],
      "typeVersion": 1,
      "id": "688f53be-311b-43ec-9f60-a78b86f09cb3",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Process the incident accordingly. {{ $json.concatenated_payload }}",
        "options": {
          "systemMessage": "You are multi agent orchestrator whose responsibilities are defined below. You will be helping the platform support team to do operations. As part of that, you are responsible for below.\n\n1) When an incident was created summarize the incident using Summarizer Chain\n2) When an incident was resolved summarize the complete incident and resolution.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -520,
        -720
      ],
      "id": "6bd1d501-df3c-4e15-9998-010ddfd96099",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "af5a14e8-2cb1-40a9-ae08-1e3c470a0088",
      "name": "OpenAI Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -580,
        -500
      ],
      "credentials": {
        "openAiApi": {
          "id": "B2fRoL6Ljp4tFT5V",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{(+new Date).toString(36).slice(-5) + Math.random().toString(36).substr(2, 5)}}",
        "tableName": "n8n_agent_orchestration_histories"
      },
      "id": "659389f4-a43a-45e6-bb7a-49539fec1aa3",
      "name": "Postgres Chat Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        -420,
        -500
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "payload",
              "includeEmpty": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        -720,
        -720
      ],
      "id": "3fb8a37c-a6e2-448e-a52d-b7fb1688cd0b",
      "name": "Summarize2"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "inc_number": "={{ $('Summarize2').item.json.concatenated_payload.parseJson().inc_number }}",
            "rcasummary": "={{ $('AI Agent').item.json.output }}"
          },
          "matchingColumns": [
            "inc_number"
          ],
          "schema": [
            {
              "id": "inc_number",
              "displayName": "inc_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "short_summary",
              "displayName": "short_summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "created_date",
              "displayName": "created_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "app_name",
              "displayName": "app_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "resolved_date",
              "displayName": "resolved_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "recommended_solution",
              "displayName": "recommended_solution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "rcasummary",
              "displayName": "rcasummary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "resolutiontype",
              "displayName": "resolutiontype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        540,
        -720
      ],
      "id": "b03201f2-01ff-43ba-aac2-b9067f6043b8",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        -1220,
        -820
      ],
      "id": "30e42bda-3d06-473d-8a46-f561039dd2c2",
      "name": "Insert Trigger1",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "firesOn": "UPDATE",
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        -1220,
        -560
      ],
      "id": "529889c3-8990-4a00-a793-e38dcf92caf8",
      "name": "Update Trigger1",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.payload.status }}",
                    "rightValue": "Resolved",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "1bc88a83-1ba1-4dcc-91d0-09c431490c2b"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1000,
        -560
      ],
      "id": "72533e66-941f-4328-9286-e83707cfe946",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://4.188.72.83:5678/webhook/invoke",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "devias"
            },
            {
              "name": "session_id",
              "value": "={{(+new Date).toString(36).slice(-5) + Math.random().toString(36).substr(2, 5)}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": {\n    \"command\": \"Provide Resolution Steps for Incident from user documents of knowledge source'{{ $json.payload.short_summary }}'\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -720,
        -1040
      ],
      "id": "13af0e55-6e75-43d8-85d3-1687552bac91",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get the incident information from the incident number and pass it to summerizer chain",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "inc_number",
              "value": "={{$fromAI('inc_number', \"Select Incident Number to Summerize\")}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        -620,
        360
      ],
      "id": "6929a00e-a6f5-4827-9ec4-f891b2e8f801",
      "name": "Fetch Incidents1",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "inc_number": "={{ $('Insert Trigger1').item.json.payload.inc_number }}",
            "recommended_solution": "={{ $json.output }}",
            "status": "In Progress"
          },
          "matchingColumns": [
            "inc_number"
          ],
          "schema": [
            {
              "id": "inc_number",
              "displayName": "inc_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "short_summary",
              "displayName": "short_summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "created_date",
              "displayName": "created_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "app_name",
              "displayName": "app_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "resolved_date",
              "displayName": "resolved_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "recommended_solution",
              "displayName": "recommended_solution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "rcasummary",
              "displayName": "rcasummary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "resolutiontype",
              "displayName": "resolutiontype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -460,
        -1040
      ],
      "id": "d81a49d1-aff6-4172-8485-6cb0597300a6",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Multi Agent Orchestration Flow",
        "height": 820,
        "width": 2080,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1320,
        -1080
      ],
      "typeVersion": 1,
      "id": "b5cbba73-2f54-470f-a9bf-99d0df52a388",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "options": {
          "queryName": "match_incidents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        140,
        340
      ],
      "id": "9c987968-aebe-4858-a0be-6cfd91673142",
      "name": "Supabase Vector Store2",
      "credentials": {
        "supabaseApi": {
          "id": "w165isNSRj8Fmgq5",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "name": "related_incidents",
        "description": "Contains all related past incidents tickets to fetch related incidents.",
        "topK": 3
      },
      "id": "da4dbdb3-8a2d-4cdc-9e82-a80625511385",
      "name": "Retrieve Incidents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        200,
        100
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "incidents",
          "mode": "list",
          "cachedResultName": "incidents"
        },
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        880,
        -980
      ],
      "id": "56a9341b-9ecd-4d9e-a311-4b4d9c9da88e",
      "name": "Insert Trigger",
      "credentials": {
        "postgres": {
          "id": "BlObcTSUzvPyqfsX",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Retrieve Incidents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Supabase Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "MCP Read Resource Client": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP List Resource Client": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Execute Tool Client": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP List Tool Client": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Docker Management Assistant": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader2": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader2",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Trigger": {
      "main": [
        [
          {
            "node": "Set Incident Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Incident Id": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Incidents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Summarize2": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Trigger1": {
      "main": [
        [
          {
            "node": "Summarize2",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Trigger1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Summarize2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Incidents1": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store2": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Incidents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Incidents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Insert Trigger": {
      "main": [
        [
          {
            "node": "Set Incident Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7300c061-2a8b-4693-a615-0fe21e6c9b83",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "47c6ba78f465a3325e6feda7b5cc7b01c80035c430e45b61b9649584e5870ac3"
  },
  "id": "ZlE8GbPP7ZUOXuqO",
  "tags": []
}